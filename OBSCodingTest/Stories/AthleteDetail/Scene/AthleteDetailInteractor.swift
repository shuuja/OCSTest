//
//  AthleteDetailInteractor.swift
//  OBSCodingTest
//
//  Created by Shuja MBP on 27/03/2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

/**
The AthleteDetailBusinessLogic protocol defines a set of methods that an object implements to perform business logic related to athlete detail.
*/
protocol AthleteDetailBusinessLogic {
    /**
     Fetches athlete results based on athlete ID.
     - Parameters:
     - athleteID: The ID of the athlete for which results are to be fetched.
     */
    func fetchAthleteResults(athleteID: String) async
}

/**
The AthleteDetailDataStore protocol defines a property to store athlete response data.
*/
protocol AthleteDetailDataStore {
    /**
     The athlete response data.
     */
    var athlete: AthleteResponse! { get set }
}
/**
The AthleteDetailInteractor class contains the business logic for athlete detail and implements the AthleteDetailBusinessLogic and AthleteDetailDataStore protocols.
*/

class AthleteDetailInteractor: AthleteDetailBusinessLogic, AthleteDetailDataStore {

    // MARK: Properties

    /// The athlete response data.
    var athlete: AthleteResponse!

    /// The presenter object for athlete detail presentation.
    var presenter: AthleteDetailPresentationLogic?

    /// The worker object for fetching athlete detail data.
    var worker = AthleteDetailWorker()

    // MARK: Methods

    /**
     Fetches athlete results based on athlete ID.
     - Parameters:
         - athleteID: The ID of the athlete for which results are to be fetched.
     */
    func fetchAthleteResults(athleteID: String) async {
        let results = await worker.fetchAthleteResults(
            for: athleteID
        )
        presenter?.presentAthleteResults(
            response: AthleteDetail.Response(
                results: results
            )
        )
    }
}
